version: "3.9"

services:

  redis:
    image: "redis:alpine"
    networks:
      - brokernet

  db:
    image: mysql:8.0.20
    restart: always
    ports:
      - "3325:3306"
    expose:
      - 3306
    command: '--init-file /data/application/init.sql --default-authentication-plugin=mysql_native_password'
    volumes:
      - ./scripts/mysql.sql:/data/application/init.sql
    env_file:
      - ./.docker.env
    networks:
      - backnet

  backend:
    build: 
      context: .
      dockerfile: docker/backend/Dockerfile
    restart: always
    ports:
      - "5000:5000"
    expose:
      - 5000
    networks:
      - backnet
      - frontnet
      - brokernet
    command: gunicorn --worker-class eventlet -w 1 --bind 0.0.0.0:5000 src.app.wsgi:app
    volumes:
      - ./src:/usr/src/app/src
    env_file:
      - ./.docker.env
    depends_on:
      - db
      - redis

  worker:
    build: 
      context: .
      dockerfile: docker/worker/Dockerfile
    restart: always
    networks:
      - backnet
      - frontnet
      - brokernet
    command: celery -A src.app.celery_app.celery_app --broker=redis://redis:6379 worker --loglevel=info --concurrency=1
    env_file:
      - ./.docker.env
    depends_on:
      - db
      - redis

  flower:
    build: 
      context: .
      dockerfile: docker/worker/Dockerfile
    restart: always
    ports:
      - "5555:5555"
    expose:
      - 5555
    networks:
      - backnet
      - frontnet
      - brokernet
    command: celery -A src.app.celery_app.celery_app --broker=redis://redis:6379 flower --port=5555
    env_file:
      - ./.docker.env
    depends_on:
      - redis

  proxy:
    build: 
      context: .
      dockerfile: docker/proxy/Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on: 
      - backend
    networks:
      - frontnet
  
networks:
  backnet:
  frontnet:
  brokernet:
